// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(uuid())
  name      String?
  email     String   @unique
  password  String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  transactions Transaction[]
  @@map("users")
  Category Category[]
}


model Transaction {
  id        String      @id @default(uuid())
  type       String   
  amount    Decimal  
  description String? 
  date       DateTime 
  userId     String @map("user_id") 
  user       User @relation(fields: [userId], references: [id])
  catecoryId String @map("category_id") 
  category   Category @relation(fields: [catecoryId], references: [id])
  installments Installment[]
  createdAt DateTime? @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@map("transactions")
}

model Category {
  id        String      @id @default(uuid())
  name      String
  userId    String      @map("user_id")
  user       User @relation(fields: [userId], references: [id])
  createdAt DateTime    @default(now()) @map("created_at")
  updatedAt DateTime?   @updatedAt @map("updated_at")

  transactions Transaction[]
  @@map("categories")
}


model Installment {
  id        String      @id @default(uuid())
  amount    Decimal 
  dueDate   DateTime @map("due_date") 
  status    String 
  transactionId String @map("transaction_id") 
  transaction Transaction @relation(fields: [transactionId], references: [id])
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@map("installments")
}